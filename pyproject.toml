[build-system]
requires = ["setuptools", "setuptools-scm"]

[project]
authors = [
  {name = "Frank Odom", email = "fodom@plainsight.ai"},
]
classifiers = ["Programming Language :: Python :: 3"]
dependencies = [
  # TODO: Check version ranges and pin dependencies
  "einops",
  "torch>=1.8",
]
description = "yet-another-retnet"
dynamic = ["version", "readme"] # NOTE: Must be in sync with [tool.setuptools.dynamic] below
license = {text = "MIT"}
name = "yet-another-retnet"
requires-python = ">=3.8"

[tool.setuptools.dynamic]
# NOTE: Must be in sync with 'project.dynamic' above
readme = {file = ["README.md"], content-type = "text/markdown"}
version = {attr = "yet_another_retnet.VERSION"}

[tool.setuptools.packages.find]
exclude = ["tests"]

# extra packages (e.g. pip install .[test])
[project.optional-dependencies]
test = [
  "black",
  "kaleido",
  "mypy",
  "pre-commit",
  "plotly",
  "pytest",
  "pytest-cov",
  "ruff",
  "types-requests",
]
train = [
  "lightning~=2.0.0",
  "tensorboard~=2.14.0",
  "tiktoken~=0.4.0",
  "torchdata>=0.6.0",
  "tqdm",
  "deepspeed",
]

# ----- Linting, Formatting, and Typing -----

[tool.black]
line-length = 88

[tool.mypy]
check_untyped_defs = "true"
files = "yet_another_retnet/"
ignore_missing_imports = "true"

[tool.pytest.ini_options]
addopts = "--cov --cov-report term-missing --cov-fail-under 80"
filterwarnings = "ignore:.*.:DeprecationWarning"
testpaths = ["tests"]

[tool.ruff]
ignore = ["B905", "E501"]
line-length = 88
select = [
  "B",
  "C",
  "E",
  "F",
  "I",
  "W",
]
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
]

[tool.ruff.mccabe]
max-complexity = 18
